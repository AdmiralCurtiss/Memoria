using System;

namespace FF9
{
	public class ff9buy
	{
		public static Int32 FF9Buy_GetType(Int32 shop_id)
		{
			for (Int32 i = 0; i < 32; i++)
			{
				try
				{
					if (ff9buy._FF9Buy_Data[shop_id][i] != 255)
					{
						Byte type = ff9item._FF9Item_Data[(Int32)ff9buy._FF9Buy_Data[shop_id][i]].type;
						if ((type & 240) <= 0)
						{
							return 0;
						}
					}
				}
				catch
				{
				}
			}
			return 1;
		}

		public const UInt16 FF9BUY_SHOP_MAX = 32;

		public const UInt16 FF9BUY_ITEM_MAX = 32;

		public const Byte FF9BUY_TYPE_WEAPON = 240;

		public static Byte[][] _FF9Buy_Data = new Byte[][]
		{
			new Byte[]
			{
				1,
				2,
				16,
				17,
				57,
				70,
				88,
				89,
				102,
				112,
				114,
				136,
				137,
				149,
				150,
				177,
				Byte.MaxValue
			},
			new Byte[]
			{
				1,
				2,
				3,
				17,
				31,
				57,
				79,
				89,
				90,
				102,
				103,
				115,
				116,
				138,
				151,
				178,
				Byte.MaxValue
			},
			new Byte[]
			{
				80,
				90,
				104,
				115,
				116,
				117,
				139,
				152,
				178,
				236,
				240,
				241,
				242,
				243,
				244,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				51,
				58,
				90,
				103,
				104,
				115,
				116,
				117,
				136,
				138,
				139,
				152,
				178,
				236,
				240,
				241,
				242,
				243,
				244,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				1,
				2,
				3,
				18,
				32,
				51,
				58,
				71,
				72,
				73,
				79,
				80,
				89,
				90,
				91,
				104,
				117,
				118,
				139,
				150,
				151,
				152,
				153,
				178,
				179,
				Byte.MaxValue
			},
			new Byte[]
			{
				33,
				52,
				58,
				71,
				72,
				80,
				91,
				92,
				104,
				105,
				117,
				118,
				119,
				140,
				153,
				154,
				179,
				180,
				Byte.MaxValue
			},
			new Byte[]
			{
				1,
				2,
				3,
				20,
				33,
				52,
				59,
				71,
				72,
				73,
				89,
				90,
				91,
				92,
				104,
				105,
				116,
				117,
				118,
				119,
				140,
				150,
				151,
				152,
				153,
				154,
				179,
				180,
				Byte.MaxValue
			},
			new Byte[]
			{
				20,
				33,
				52,
				59,
				92,
				105,
				118,
				119,
				140,
				153,
				154,
				155,
				180,
				236,
				240,
				241,
				242,
				243,
				244,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				42,
				52,
				59,
				71,
				72,
				73,
				74,
				81,
				92,
				93,
				120,
				121,
				155,
				156,
				Byte.MaxValue
			},
			new Byte[]
			{
				2,
				3,
				4,
				59,
				70,
				71,
				72,
				73,
				74,
				81,
				89,
				90,
				91,
				92,
				93,
				112,
				114,
				115,
				116,
				117,
				118,
				119,
				120,
				121,
				150,
				151,
				152,
				153,
				154,
				155,
				156,
				157
			},
			new Byte[]
			{
				1,
				2,
				3,
				4,
				42,
				52,
				64,
				85,
				93,
				120,
				121,
				155,
				156,
				157,
				236,
				240,
				241,
				242,
				243,
				244,
				245,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				3,
				4,
				20,
				33,
				34,
				41,
				42,
				59,
				60,
				65,
				71,
				72,
				73,
				74,
				85,
				90,
				91,
				92,
				93,
				104,
				105,
				120,
				121,
				122,
				139,
				140,
				141,
				156,
				157,
				158,
				180,
				181
			},
			new Byte[]
			{
				1,
				2,
				3,
				4,
				20,
				21,
				33,
				34,
				41,
				42,
				52,
				59,
				60,
				65,
				74,
				93,
				104,
				105,
				120,
				121,
				122,
				140,
				141,
				156,
				157,
				158,
				178,
				180,
				181,
				Byte.MaxValue
			},
			new Byte[]
			{
				21,
				33,
				34,
				42,
				53,
				60,
				65,
				75,
				81,
				85,
				94,
				105,
				122,
				123,
				124,
				141,
				156,
				157,
				158,
				180,
				181,
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				245,
				247,
				248,
				253
			},
			new Byte[]
			{
				22,
				35,
				43,
				53,
				60,
				66,
				75,
				82,
				85,
				94,
				95,
				105,
				106,
				123,
				124,
				125,
				141,
				142,
				158,
				159,
				181,
				182,
				237,
				240,
				242,
				243,
				244,
				245,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				4,
				5,
				22,
				23,
				36,
				44,
				53,
				61,
				67,
				75,
				76,
				82,
				86,
				95,
				96,
				97,
				106,
				107,
				126,
				127,
				142,
				159,
				160,
				182,
				183,
				237,
				240,
				245,
				246,
				247,
				248,
				253
			},
			new Byte[]
			{
				2,
				17,
				32,
				42,
				52,
				58,
				65,
				74,
				80,
				86,
				96,
				97,
				107,
				127,
				128,
				142,
				143,
				160,
				161,
				183,
				184,
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				245,
				246,
				248,
				253
			},
			new Byte[]
			{
				2,
				3,
				4,
				5,
				24,
				37,
				46,
				54,
				61,
				67,
				76,
				86,
				91,
				92,
				93,
				94,
				95,
				96,
				97,
				107,
				108,
				120,
				122,
				128,
				129,
				143,
				161,
				162,
				184,
				185,
				Byte.MaxValue
			},
			new Byte[]
			{
				1,
				2,
				3,
				4,
				5,
				6,
				25,
				38,
				47,
				54,
				83,
				86,
				99,
				108,
				129,
				130,
				131,
				144,
				162,
				163,
				186,
				237,
				240,
				241,
				242,
				243,
				244,
				246,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				6,
				25,
				27,
				38,
				47,
				48,
				54,
				79,
				83,
				86,
				93,
				95,
				99,
				100,
				108,
				110,
				119,
				120,
				128,
				129,
				130,
				131,
				144,
				145,
				162,
				163,
				164,
				186,
				187,
				188,
				Byte.MaxValue
			},
			new Byte[]
			{
				62,
				68,
				77,
				132,
				133,
				165,
				Byte.MaxValue
			},
			new Byte[]
			{
				3,
				18,
				32,
				43,
				54,
				58,
				81,
				92,
				104,
				140,
				154,
				180,
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				245,
				246,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				22,
				35,
				43,
				53,
				60,
				66,
				75,
				82,
				85,
				86,
				94,
				95,
				106,
				123,
				124,
				125,
				142,
				158,
				159,
				182,
				236,
				237,
				240,
				241,
				242,
				243,
				245,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				Byte.MaxValue
			},
			new Byte[]
			{
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				240,
				243,
				244,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				240,
				241,
				242,
				243,
				244,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				240,
				241,
				242,
				243,
				244,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				245,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				245,
				246,
				247,
				248,
				253,
				Byte.MaxValue
			},
			new Byte[]
			{
				236,
				237,
				240,
				241,
				242,
				243,
				244,
				245,
				246,
				247,
				248,
				253,
				Byte.MaxValue
			}
		};
	}
}
